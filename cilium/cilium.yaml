# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUthMDJ4bitEd0VlbFFwYnhGYW9aWDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeE5UQXpORFV3TkZvWERUSTNNRE14TlRBegpORFV3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFuSXl1N3NoM1ExNS9rdlduaXRPTkd2SUgySXpVVGh0am1yVUc2OEZsbWgvMEFvdm0KbXo1MzhUc09lMlpnV01WNVM1RWtVRlUxVCtBaXZnc09rRlRYMWxVMGhvN29FMG5pVmhBZDFJOTYwcVJQZjdVRAp5Z0pHVklOQ1BuS3F5cHplM1VRRVovYksxejQvWkd5RjNFMi9mZnJ2ZzdLRGVIUUhrSXVDa3BXSEFzYW9mUG1DCjhXdWlYdkZ1eEJrZHZucklkWXdMWVhLYk9WYlIyVjZXUHJsc0xwN3J4ODBYK28wQzhWQVJwUXZ6R1Zscm95S1kKd0g5TWdQdjkrd0hTU0dhUVVvdTcrSmlJbml2Q0diV3ZEOFBzckVTVUZKNzIrbjhVU0xkRDVmcmIvN05JMzVqRwpFL0J0a1Fub2w2MlVhWGFlbWQ0VTcxMVZTSjkxdlBkeWRBUkgwd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWdtYnZDemxNUFRoeG9oSk1KTWpmY01CN2ZUTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0VTbSt6TXZQQ0xNQlZvOXU4RHNMaGZqT0kvOEYwaUFWeDZ3RS8zdjZLblpUTHVwSXVoWXRlCjNmekNiRWg0ZVVrM3VSeWZCUWVyenNTWVMyeWdSenpSSjgxSk1CeWlOdGdLMldhMi9YRG1Gbm91SkVNNDNQT1cKMjlFSlpYdnhuMHhWeDlqcE8zL0RZNlQwR0p5bWwzTURJOTNwbjNpQ1lRaGJaaXlyS0hIcGtvM05wT2VlUENlLwpsYzlzSThENUlqWUVxVTlneksvdkp3Y1QyYUxuazlxQjljVUtzRHBVc2hyU0tVK1ozdTY4cFg0cnVrSnNUT2dkCjZRZXJGWmRXQ0tPUlV4dUhYK1lyTGk0cUFLS3VVMUVrdjFjZ3pXbWpMMUx6T2FNYjI1dDZOTURWOTUvQS8wZWoKeC9iL0dya3gwU1VmYUpoRHBZSW1kTVNxQXp5US9sTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbkl5dTdzaDNRMTUva3ZXbml0T05HdklIMkl6VVRodGptclVHNjhGbG1oLzBBb3ZtCm16NTM4VHNPZTJaZ1dNVjVTNUVrVUZVMVQrQWl2Z3NPa0ZUWDFsVTBobzdvRTBuaVZoQWQxSTk2MHFSUGY3VUQKeWdKR1ZJTkNQbktxeXB6ZTNVUUVaL2JLMXo0L1pHeUYzRTIvZmZydmc3S0RlSFFIa0l1Q2twV0hBc2FvZlBtQwo4V3VpWHZGdXhCa2R2bnJJZFl3TFlYS2JPVmJSMlY2V1BybHNMcDdyeDgwWCtvMEM4VkFScFF2ekdWbHJveUtZCndIOU1nUHY5K3dIU1NHYVFVb3U3K0ppSW5pdkNHYld2RDhQc3JFU1VGSjcyK244VVNMZEQ1ZnJiLzdOSTM1akcKRS9CdGtRbm9sNjJVYVhhZW1kNFU3MTFWU0o5MXZQZHlkQVJIMHdJREFRQUJBb0lCQVFDWGlsZU1MZUhGQlNUWgpUWkx4Zi9lSHJlS0tiVWpXa3d6SUpaU2Rnb2ludVdhclVHSGF4WTIxcGtWT2pydVZNeE5IWXlpVDJ1ZlFlbGNuClArekpLbGdFMGxZV0t4L2NEQmxjMWgwS05obmU3YzlIQUNLNjJaamJGblI1bnVaVlc2VWc2MGFZblAyZGZsUS8KRWc1Q1E4Q3FZczZYM2FZR1k4c3UwTjJFcDlvWmhGRFhPZ0M3SjdsRnJkR09vUENNdjBxM3RMY3RHSmFGYWdubgo3S1FWemNIQXVMeUJnZTViL0w3UVBmbWhZWjJoT3RtS3kyOERpTUVYVDFibXFsQmhxVTVFZDltSU91MnpNalBNCnVydDJiNG9ITnJTbXpzMElwSzYyV3hXTUVzSjB3aDBRdHFPaE93ODBxV0hTWnY1VDByOFBBUEtJeGFTbzJickQKZkpEWGNGQ0JBb0dCQU1WZjFHODBNRXpSRGtWNjQzaEhuVjNlSXNOVE9ER1E2VEo4YS9HQ2pWamI5Lzkxc1JmQwphcTd2MVBDUTFOcnhqRXFnNGd3b2Z1THpBOXZhak5EbEZ6ZFpMdU92bENmM3dwRUdxK2tCWGkrcFdnZHRPaHhOCkpuSlo4ZWt2RWxOakN6WEJ0L2lzckhEMHJPWkhERUZxUVJZSEpXa05wZWtna2xWVjQxZHprNXYvQW9HQkFNc00Ka293UlF0N1ViWisyWVBrRlM3cE5DT1A0L0wwVmVlU0JFK2taZGdsU1NYRzhNaVdzNHlQYVBRcmZDR3I3Rm85MAo1ajl4WEVVQ3MzR0VkcGRTNzVrWWxtRmJOTmVGakRqa0d2cThqSnJEeE11dDVxM0dRdWkzUlNVWXdWbEJhR2dDCkdhcWl2RFIxNlpyMnA5ZWlYRUxGZUNveU1pdTZDZ05MaTFibTNpUXRBb0dBTllMTnJYaVF2OExPQTdoVmczNm4KQTVQK0NNYS9MWEVFU0ZQRFVDNzg4Mkp2MGlxdVlLcXRFZENrQXJUQmdMcU1ObzkzdWFRaEFwYXdMU01MbW5jQgozRmVwaHNGTGdhcUNiWjlKYkZxYWxvRnJqeWZsNFZacFhnZFV0c3UwUkRkT0NyMENpOEVFMzNyMmhWZ3QwbTVrClJ2eVkvK3BiV09FankwOEYyK2ZSMVRFQ2dZRUFnRy80ZHU4b1BHbGsybVR6M0REMFlPai9tYXpTdWd4T3FUTFkKMUZiTnFrSEp3VTdJN2JuNWg2RXhnYUhvNGpyblgyRVRqOGYyRkpVTHl0OStZR1FPdU9tcm5mT2liajNFbit2eQpBTzZwaGZBVm1MenNzTGs3YzVjUi90QTA1VytSU2xFaHlTVGRKZFg4S1pDaVJLMG43UGlaOVI4QlMxV0hwZVB3ClJNME9jUlVDZ1lBNTZ5ZVc5WWxyQW50ckdmVk96Y2hEcldQUE5COTlQZkdCUXV6Umw1K0laS1ljRGhWUUMwYysKaW9IOVc0RW9sU0g1eHZ6dDk1MkJ1UTZDNGFuN1FGNE8vekFLMG9rd3F5SXJsN0pBdVhEeTd6SjZ2Mys4czJFQQpvL3QwdGZkUHF2L2taamZMQStIcnpWYXZoaFlja0VUU3BNYXJHanBiWkFTNytFSVljM2xKSUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUthMDJ4bitEd0VlbFFwYnhGYW9aWDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeE5UQXpORFV3TkZvWERUSTNNRE14TlRBegpORFV3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFuSXl1N3NoM1ExNS9rdlduaXRPTkd2SUgySXpVVGh0am1yVUc2OEZsbWgvMEFvdm0KbXo1MzhUc09lMlpnV01WNVM1RWtVRlUxVCtBaXZnc09rRlRYMWxVMGhvN29FMG5pVmhBZDFJOTYwcVJQZjdVRAp5Z0pHVklOQ1BuS3F5cHplM1VRRVovYksxejQvWkd5RjNFMi9mZnJ2ZzdLRGVIUUhrSXVDa3BXSEFzYW9mUG1DCjhXdWlYdkZ1eEJrZHZucklkWXdMWVhLYk9WYlIyVjZXUHJsc0xwN3J4ODBYK28wQzhWQVJwUXZ6R1Zscm95S1kKd0g5TWdQdjkrd0hTU0dhUVVvdTcrSmlJbml2Q0diV3ZEOFBzckVTVUZKNzIrbjhVU0xkRDVmcmIvN05JMzVqRwpFL0J0a1Fub2w2MlVhWGFlbWQ0VTcxMVZTSjkxdlBkeWRBUkgwd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWdtYnZDemxNUFRoeG9oSk1KTWpmY01CN2ZUTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0VTbSt6TXZQQ0xNQlZvOXU4RHNMaGZqT0kvOEYwaUFWeDZ3RS8zdjZLblpUTHVwSXVoWXRlCjNmekNiRWg0ZVVrM3VSeWZCUWVyenNTWVMyeWdSenpSSjgxSk1CeWlOdGdLMldhMi9YRG1Gbm91SkVNNDNQT1cKMjlFSlpYdnhuMHhWeDlqcE8zL0RZNlQwR0p5bWwzTURJOTNwbjNpQ1lRaGJaaXlyS0hIcGtvM05wT2VlUENlLwpsYzlzSThENUlqWUVxVTlneksvdkp3Y1QyYUxuazlxQjljVUtzRHBVc2hyU0tVK1ozdTY4cFg0cnVrSnNUT2dkCjZRZXJGWmRXQ0tPUlV4dUhYK1lyTGk0cUFLS3VVMUVrdjFjZ3pXbWpMMUx6T2FNYjI1dDZOTURWOTUvQS8wZWoKeC9iL0dya3gwU1VmYUpoRHBZSW1kTVNxQXp5US9sTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUU5ud3gvYmdoaVM0NzRUWE9XZ0pwakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpFMU1ETTBOVEEwV2hjTk1qY3dNekUxTURNMApOVEEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMGg5dTNnVUJRdEgyQVV2UGJFZ3QKZC9nZE1VNmVzMlpjdlk2Z3I5R0g5TUE2ZjNPNWNwVUl0ZHlMOTJWaDBKTVhrYTVrYnF3ZFp5Ykt0NkxSMCsrKwpiSHJTS1BIck1aajZ5dVNVOWY2OTUyVlQzVmNFa1F6ZW1TeWcwTS9qUnFiK0pGUG9JTHRUT2RHeWNONXh4QmwwCjA5Z0toZDgwRy8rNXY5TG9uVVB0WEFhaFNKcHVjZElweElDRVZJR2hBeDM5MGhjR01zSXcxamZ6WS8yOFRBaU0KVlZTTk92azNIRDQ2QmFEM0Vmd0xZMFR5RUwvQnlvK0IwZHpuaW85RVcyR29NZ0lhL2Y1MXdTbDZKU1hWeHlPRApCM2hacWVXbTV1VFpJY3dsMExPdFQ3eHpmZE9LbTlOK0plN3A5ak5ld3Bvckx2cnFsenpjL2E5N09jKzZZdXdvCjZRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUSUptN3dzNVREMDRjYQpJU1RDVEkzM0RBZTMwekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBZlV4bTc3WUNLa3lZNVNJM1VhSjZ4MVBZN0dPSXcKZnRQQmNMTFlvQnV0VVBmQkQvT3Q0bktEeEVTUnpaUmd2MFBPa1JaSWxWZTFnZDhXdlNYbk42ZWR1aTBxZ0RQWgozeHF1blZmNkpMcERVOEwva1ViMWlZY3BuZmFNY2ZHa2krTms5Z2FrWlpZQkFFZ1NtbStJTWRWNnp0eHllYkhzCjVXMDJHOVIwMFZOeWt1aUlmcHUyY2pFV1RBQ3VHZ3RCS0NTOVh4K0FTRllFT3ZQRlFVQnh1UzhpM09OeENHbnMKbWdPM05GVmxzUFRqejhIKy9JVWR5T2Z3alg3VVNGQWdKVTJUUDQ4SEVqdS9ZT2dnSmQ2TjB4TGVLbFI3RWVTbgpxN3J2VzJycVpUbk45bWFNekxYak80RHNvbmhUNU43dXllZWpkQ3Y4Tk1WOGgzeUsrS3FKK1hBZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGg5dTNnVUJRdEgyQVV2UGJFZ3RkL2dkTVU2ZXMyWmN2WTZncjlHSDlNQTZmM081CmNwVUl0ZHlMOTJWaDBKTVhrYTVrYnF3ZFp5Ykt0NkxSMCsrK2JIclNLUEhyTVpqNnl1U1U5ZjY5NTJWVDNWY0UKa1F6ZW1TeWcwTS9qUnFiK0pGUG9JTHRUT2RHeWNONXh4QmwwMDlnS2hkODBHLys1djlMb25VUHRYQWFoU0pwdQpjZElweElDRVZJR2hBeDM5MGhjR01zSXcxamZ6WS8yOFRBaU1WVlNOT3ZrM0hENDZCYUQzRWZ3TFkwVHlFTC9CCnlvK0IwZHpuaW85RVcyR29NZ0lhL2Y1MXdTbDZKU1hWeHlPREIzaFpxZVdtNXVUWkljd2wwTE90VDd4emZkT0sKbTlOK0plN3A5ak5ld3Bvckx2cnFsenpjL2E5N09jKzZZdXdvNlFJREFRQUJBb0lCQVFEQzhxN21CamE1VEJ1MQo4Q1F1RG5sQkNVM3NaVWtRb1RRQ0dzWXkyWEFPUUJzR0ROUk4zc0FLR3VreFN6cUpUUzljMWpRUUNsZnRVQ3hjClhBL1pWbUdTUEJHb00ydEd4T3hLT2ZHS21pS1BBWS9obDg2QTFUUGhZV3FDMFozSCt6OW5iUUc4L0krbTRVdHgKTkxEUWc5M0VmbmlrNUFWd3hMNE5ueHg2Ykg5WUZJODM0QWZZL3JCWWw3eFNLTDBpTWczR1NNbWVjbDlHZk1Mcwo5SUdzNHdob0txSFQxVGdQRFBORXdKYVJnQ095OUVIMWZUZWdLSnp4aXByRW1yU3NMT0IyelZmaTNGYmtCQ3ZGCjBmZGFzNUNCZjZPR1U0OXVwSmRzSFM0WklWRGdZZDNKKzc2bnlOelphclM2OWIvYnQ1Z3pJcXZSSlZHL2orb1AKS0R2eGhqQUJBb0dCQU5ncWdyaWFoemlraE0zcWE1RUZ1NTgrY2xLQjVzalN1TFZvSmNEL0JOVllPa0xRZVRsMwprNjhxVGlxVHJLMm9VL1IvZGZxNVF1TVVhRmFOeVFFcnEyOGErbXp4RCthWXh5UVh5MXlDVjB2dm1jVmhyTURECmhWckhJRHF6UkxhT0pYZjZhZjhaSHBGa1dEQWpVb3lLUkUrY1lsa0lGSjgvU2FsL0NaZ2M2TjFwQW9HQkFQalgKMWN1NjN3MkZtZnI3bzNJVGhFbU95RW1QNWpZQ1Zia2VMMU1uaWxISEZMRHFzcGt6ejNjSEdBSitZZ0VLakllMAo5ZjBzQWhQQ1V3U052RTNWcUE2WitsMDZ6a2pVQ0JHOGwvQTdFWE91dzZFYlQ2a2RMT2xPOHB1TVltaXRyQk01CjRNYksrVFpnSFcyUGlaYjc3ZFRLZzBrMkI2UkVuUTBIMkhYdW9mK0JBb0dBYzArNkM5L2k0a1JnMDdlSlNnTlUKNHMzZERrWmRaaU9DaE1MWjRPb3BHZVhHcm4ybkxSQ3NwM1JaM2p5SWtOcUticExQekwrbS9wdVVUUmUxY2ZwcApxUXNySzVJc2VVWm1kTXA4b1F5bXBNdGJxLzgrdUZXVWZhaGJlUFRJWXRuUkF2K0NLNktxdThSYmh0SlE1c2ViClNSeVRHZ3RGZE8yOXpiMEcwUzRheW9FQ2dZQnVRN1dJd1JWMWVHM3l1TzZEN2dJQVZqU0o1Q211WlBwM1BOamIKai9uS290eVlTR2M3VzZuaXBGSVBTTkZFaE5nZ2loODJQL25ycDRBQjFJeE1NUkIyNStQNHk4WDhuM2V6NUUydgpOWDFXTldxYVNPL1RrQW9HbCtVSTUvdnpSb0dwUTB4R3lrb0R2ak5NQ1A1KzJNTmFOeUpWbm90a1RzTUlzeUZICm9LWklBUUtCZ0VBSS84WTJYS2FDZXVEdGwxbnFlSzRiVTRVdU9Gbk00TlE3cElOY1YyRjJBZUt0KzZBb2d6clAKWi9DYzZycUl4VlhBQ3FqT05SY1VzLzRqclhhaDlDWUZYeDdlV3FBZGFobi9iTGxXTEc5cTA4dmZzanBNVTVDSQpTNCsxQXROZkxPSjdXdllMbVErODk2OVhkTGJJMFB4N2tUeE1UMmo4eGVMZlZnRXBlQkdnCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  routing-mode: "native"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-ipsec: "true"
  ipsec-key-file: /etc/ipsec/keys
  enable-ipsec-key-watcher: "true"
  ipsec-key-rotation-duration: "5m"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.147.0.0/16

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.147.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "10"
  k8s-client-burst: "20"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local