apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: keycloak
spec:
  instances: 1
  db:
    vendor: postgres
    host: postgres.domain.com
    port: 5432
    database: keycloakdb
    usernameSecret:
      name: keycloak-secret
      key: DB_USERNAME
    passwordSecret:
      name: keycloak-secret
      key: DB_PASSWORD
  hostname:
    hostname: keycloak.domain.com
  http:
    tlsSecret: keycloak-tls
  ingress:
    enabled: false
  features:
    enabled:
      - declarative-user-profile
  #additionalOptions:
  #  - name: spi-theme-welcome-theme
  #    value: keycloak.v2
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secret
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
type: Opaque
data:
  DB_USERNAME: username
  DB_PASSWORD: password
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
  annotations:
    cert-manager.io/cluster-issuer: "org-ca-issuer"
    cert-manager.io/common-name: "Keycloak"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "false"
    nginx.ingress.kubernetes.io/server-snippet: |
      ssl_session_timeout 1d;
      location = / {
          return 302 $scheme://$http_host/realms/org/account;
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - keycloak.domain.com
      secretName: keycloak-tls
  defaultBackend:
    service:
      name: keycloak-service
      port:
        number: 8443
  rules:
  - host: keycloak.domain.com
    http:
      paths:
      - pathType: ImplementationSpecific 
        backend:
          service:
            name: keycloak-service
            port:
              number: 8443