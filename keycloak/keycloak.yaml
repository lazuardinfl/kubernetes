apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secret
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
type: Opaque
data:
  KEYCLOAK_ADMIN: username
  KEYCLOAK_ADMIN_PASSWORD: password
  KC_HOSTNAME: keycloak.domain.com
  KC_DB: db_type
  KC_DB_URL_HOST: db_host
  KC_DB_URL_DATABASE: db_name
  KC_DB_URL_PORT: port
  KC_DB_USERNAME: username
  KC_DB_PASSWORD: password
  PKCS12_PASSWORD: password
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
spec:
  type: ClusterIP
  selector:
    app: keycloak
    app.kubernetes.io/instance: keycloak
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-discovery
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: keycloak
    app.kubernetes.io/instance: keycloak
  ports:
  - port: 7800
    protocol: TCP
    targetPort: 7800
  publishNotReadyAddresses: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
      app.kubernetes.io/instance: keycloak
  serviceName: ""
  template:
    metadata:
      labels:
        app: keycloak
        app.kubernetes.io/instance: keycloak
    spec:
      containers:
      - name: keycloak
        args:
        - -Djgroups.dns.query=keycloak-discovery.keycloak
        - --verbose
        - start
        env:
        - name: KC_FEATURES
          value: declarative-user-profile
        - name: KC_HTTP_PORT
          value: "8080"
        - name: KC_HTTPS_PORT
          value: "8443"
        - name: KC_HTTPS_CERTIFICATE_FILE
          value: /mnt/certificates/tls.crt
        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: /mnt/certificates/tls.key
        - name: KC_SPI_TRUSTSTORE_FILE_FILE
          value: /mnt/certificates/truststore.p12
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_CACHE
          value: ispn
        - name: KC_CACHE_STACK
          value: kubernetes
        - name: KC_PROXY
          value: reencrypt
        - name: KC_SPI_TRUSTSTORE_FILE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PKCS12_PASSWORD
              name: keycloak-secret
        envFrom:
        - secretRef:
            name: keycloak-secret
        image: quay.io/keycloak/keycloak:23.0.7
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/live
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/ready
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 600
          httpGet:
            path: /health/started
            port: 8443
            scheme: HTTPS
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /mnt/certificates
          name: keycloak-tls-certificates
      restartPolicy: Always
      volumes:
      - name: keycloak-tls-certificates
        secret:
          defaultMode: 420
          optional: false
          secretName: keycloak-tls
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: keycloak-tls
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
spec:
  secretName: keycloak-tls
  commonName: "Keycloak"
  dnsNames:
    - keycloak.domain.com
  issuerRef:
    name: org-ca-issuer
    kind: ClusterIssuer
  keystores:
    pkcs12:
      create: true
      passwordSecretRef:
        name: keycloak-secret
        key: PKCS12_PASSWORD
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  labels:
    app: keycloak
    app.kubernetes.io/instance: keycloak
  annotations:
    haproxy.org/server-ssl: "true"
    haproxy.org/backend-config-snippet: |
      acl org path /
      http-request redirect code 302 prefix /realms/org/account if org
spec:
  ingressClassName: haproxy
  tls:
    - hosts:
        - keycloak.domain.com
      secretName: keycloak-tls
  rules:
  - host: keycloak.domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keycloak
            port:
              number: 8443