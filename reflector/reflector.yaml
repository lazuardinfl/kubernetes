apiVersion: v1
kind: ServiceAccount
metadata:
  name: reflector
  labels:
    app.kubernetes.io/name: reflector
    app.kubernetes.io/instance: reflector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: reflector
  labels:
    app.kubernetes.io/name: reflector
    app.kubernetes.io/instance: reflector
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: reflector
  labels:
    app.kubernetes.io/name: reflector
    app.kubernetes.io/instance: reflector
roleRef:
  kind: ClusterRole
  name: reflector
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: reflector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reflector
  labels:
    app.kubernetes.io/name: reflector
    app.kubernetes.io/instance: reflector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reflector
      app.kubernetes.io/instance: reflector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reflector
        app.kubernetes.io/instance: reflector
    spec:
      serviceAccountName: reflector
      securityContext:
        fsGroup: 2000
      containers:
        - name: reflector
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: emberstack/kubernetes-reflector:9.0.322
          env:
            - name: ES_Serilog__MinimumLevel__Default
              value: "Information"
            - name: ES_Reflector__Watcher__Timeout
              value: ""
            - name: ES_Ignite__KubernetesClient__SkipTlsVerify
              value: "false"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 5
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          resources: {}
